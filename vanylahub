local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local Lighting = game:GetService("Lighting")
local Workspace = game:GetService("Workspace")

local optimizedParts = {}
local isUltraMode = false

local function optimizePerformance()
    Workspace.StreamingEnabled = true
    Lighting.GlobalShadows = false
    Lighting.Technology = Enum.Technology.Compatibility
    Lighting.FogEnd = 1000000
    Lighting.FogStart = 1000000
    Lighting.FogColor = Color3.fromRGB(255, 255, 255)
    Lighting.Brightness = 3
    Lighting.Ambient = Color3.fromRGB(128, 128, 128)
    Lighting.OutdoorAmbient = Color3.fromRGB(128, 128, 128)
    Lighting.ClockTime = 14
    Lighting.ShadowSoftness = 0
    pcall(function()
        settings().Rendering.QualityLevel = Enum.QualityLevel.Level01
        settings().Rendering.MeshPartDetailLevel = Enum.MeshPartDetailLevel.Level01
        settings().Rendering.GraphicsMode = Enum.GraphicsMode.Direct3D9
    end)
    local partCount = 0
    for _, obj in pairs(Workspace:GetDescendants()) do
        if obj:IsA("BasePart") then
            obj.TopSurface = Enum.SurfaceType.Smooth
            obj.BottomSurface = Enum.SurfaceType.Smooth
            obj.LeftSurface = Enum.SurfaceType.Smooth
            obj.RightSurface = Enum.SurfaceType.Smooth
            obj.FrontSurface = Enum.SurfaceType.Smooth
            obj.BackSurface = Enum.SurfaceType.Smooth
            obj.Material = Enum.Material.SmoothPlastic
            obj.CastShadow = false
            table.insert(optimizedParts, obj)
        elseif obj:IsA("Texture") or obj:IsA("Decal") then
            obj.Transparency = math.max(obj.Transparency, 0.1)
        elseif obj:IsA("ParticleEmitter") or obj:IsA("Fire") or obj:IsA("Smoke") or obj:IsA("Sparkles") then
            obj.Enabled = false
        elseif obj:IsA("Atmosphere") then
            obj.Density = 0
            obj.Offset = 0
            obj.Color = Color3.fromRGB(255, 255, 255)
            obj.Decay = Color3.fromRGB(255, 255, 255)
            obj.Glare = 0
            obj.Haze = 0
        elseif obj:IsA("Clouds") then
            obj.Enabled = false
            obj.Density = 0
        elseif obj:IsA("BloomEffect") or obj:IsA("BlurEffect") or obj:IsA("ColorCorrectionEffect") then
            obj.Enabled = false
        end
        if partCount % 100 == 0 then task.wait() end
        partCount += 1
    end
end

local function ultraOptimize()
    if isUltraMode then return end
    optimizePerformance()
    Lighting.Technology = Enum.Technology.Legacy
    Lighting.Brightness = 5
    Lighting.Ambient = Color3.fromRGB(178, 178, 178)
    Lighting.OutdoorAmbient = Color3.fromRGB(178, 178, 178)
    Lighting.ColorShift_Bottom = Color3.fromRGB(255, 255, 255)
    Lighting.ColorShift_Top = Color3.fromRGB(255, 255, 255)
    pcall(function()
        settings().Rendering.QualityLevel = Enum.QualityLevel.Level01
        settings().Rendering.MeshPartDetailLevel = Enum.MeshPartDetailLevel.Level01
        settings().Rendering.GraphicsMode = Enum.GraphicsMode.Direct3D9
        settings().Physics.AllowSleep = true
        settings().Physics.ThrottleAdjustTime = 0
    end)
    for _, obj in pairs(optimizedParts) do
        if obj and obj.Parent then
            obj.Material = Enum.Material.Plastic
            obj.Reflectance = 0
            obj.CastShadow = false
        end
    end
    for _, obj in pairs(Workspace:GetDescendants()) do
        if obj:IsA("Sound") and obj.IsPlaying then
            obj.Volume = 0
        elseif obj:IsA("Terrain") then
            obj.WaterWaveSize = 0
            obj.WaterWaveSpeed = 0
            obj.WaterReflectance = 0
            obj.WaterTransparency = 0.5
            obj.WaterColor = Color3.fromRGB(0, 150, 255)
            obj:ReplaceMaterial(Enum.Material.Grass, Enum.Material.SmoothPlastic)
        end
    end
    collectgarbage("collect")
    isUltraMode = true
end

local function markBarrier(part)
    if part:IsA("BasePart") and part.CanCollide and part.Transparency == 1 then
        if not Workspace:FindFirstChild(part.Name.."_BarrierClone") then
            local clone = Instance.new("Part")
            clone.Name = part.Name.."_BarrierClone"
            clone.Size = part.Size
            clone.CFrame = part.CFrame
            clone.Anchored = true
            clone.CanCollide = false
            clone.Transparency = 0.5
            clone.Color = Color3.fromRGB(255,0,0)
            clone.Material = Enum.Material.Neon
            clone.Parent = Workspace
        end
    end
end

local function detectBarriers()
    for _, obj in pairs(Workspace:GetDescendants()) do
        markBarrier(obj)
    end
    Workspace.DescendantAdded:Connect(function(obj)
        markBarrier(obj)
    end)
end

ultraOptimize()
detectBarriers()
print("Ultra Optimize Active + Barrier Clone Detector Enabled")